/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.itec1.e_commerce.views;

import com.itec1.e_commerce.controllers.CarrierPanelController;
import com.itec1.e_commerce.entities.Carrier;
import com.itec1.e_commerce.views.resources.TableListener;
import com.itec1.e_commerce.views.resources.FieldDataValidator;
import com.itec1.e_commerce.views.resources.JTextFieldListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author sjcex
 */
public final class Management_Carriers_Panel extends javax.swing.JPanel implements InterfacePanel {

    private final CarrierPanelController controller;
    private final FieldDataValidator validator;
    private List<Carrier> carriers;

    /**
     * Creates new form Management_Carriers_Panel
     */
    public Management_Carriers_Panel() {
        initComponents();

        this.controller = new CarrierPanelController(this);
        this.carriers = controller.updateTable("");

        initListener();

        this.validator = new FieldDataValidator();
        initValidator();

        initPanel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        jPanel_datos = new javax.swing.JPanel();
        jbl_CarrierName = new javax.swing.JLabel();
        jtf_CarrierName = new javax.swing.JTextField();
        jbl_CarrierCuit = new javax.swing.JLabel();
        jtf_CarrierCuit = new javax.swing.JTextField();
        jbl_CarrierPhone = new javax.swing.JLabel();
        jtf_CarrierPhone = new javax.swing.JTextField();
        jlbl_info = new javax.swing.JLabel();
        jbn_updateCarrier = new javax.swing.JButton();
        jbn_deleteCarrier = new javax.swing.JButton();
        jbl_CarrierTransport = new javax.swing.JLabel();
        jbn_saveCarrier = new javax.swing.JButton();
        jbn_restoreCarrier = new javax.swing.JButton();
        jcb_ground = new javax.swing.JCheckBox();
        jcb_maritime = new javax.swing.JCheckBox();
        jcb_aerial = new javax.swing.JCheckBox();
        jPanel_crud = new javax.swing.JPanel();
        jScrollPaneTabla = new javax.swing.JScrollPane();
        tableCarriers = new javax.swing.JTable();
        seeCarriers = new javax.swing.JButton();
        jbl_filter = new javax.swing.JLabel();
        jtf_cuitFilter = new javax.swing.JTextField();

        jPanel.setBackground(new java.awt.Color(255, 255, 255));
        jPanel.setMaximumSize(new java.awt.Dimension(800, 600));
        jPanel.setMinimumSize(new java.awt.Dimension(800, 600));

        jPanel_datos.setBackground(new java.awt.Color(0, 51, 255));

        jbl_CarrierName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_CarrierName.setForeground(new java.awt.Color(255, 255, 255));
        jbl_CarrierName.setText("NOMBRE");

        jtf_CarrierName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jbl_CarrierCuit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_CarrierCuit.setForeground(new java.awt.Color(255, 255, 255));
        jbl_CarrierCuit.setText("C.U.I.T.");
        jbl_CarrierCuit.setName("jbl_cuit"); // NOI18N

        jtf_CarrierCuit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jbl_CarrierPhone.setBackground(new java.awt.Color(255, 255, 255));
        jbl_CarrierPhone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_CarrierPhone.setForeground(new java.awt.Color(255, 255, 255));
        jbl_CarrierPhone.setText("TELÉFONO");
        jbl_CarrierPhone.setName("jbl_CarrierPhone"); // NOI18N

        jtf_CarrierPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jlbl_info.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlbl_info.setForeground(new java.awt.Color(255, 0, 0));

        jbn_updateCarrier.setText("MODIFICAR");
        jbn_updateCarrier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbn_updateCarrierActionPerformed(evt);
            }
        });

        jbn_deleteCarrier.setText("ELIMINAR");
        jbn_deleteCarrier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbn_deleteCarrierActionPerformed(evt);
            }
        });

        jbl_CarrierTransport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_CarrierTransport.setForeground(new java.awt.Color(255, 255, 255));
        jbl_CarrierTransport.setText("TRANSPORTES");

        jbn_saveCarrier.setText("GUARDAR");
        jbn_saveCarrier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbn_saveCarrierActionPerformed(evt);
            }
        });

        jbn_restoreCarrier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-sincronizar-32.png"))); // NOI18N
        jbn_restoreCarrier.setText("RECUPERAR");
        jbn_restoreCarrier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbn_restoreCarrierActionPerformed(evt);
            }
        });

        jcb_ground.setText("terrestre");

        jcb_maritime.setText("marítimo");

        jcb_aerial.setText("aéreo");

        javax.swing.GroupLayout jPanel_datosLayout = new javax.swing.GroupLayout(jPanel_datos);
        jPanel_datos.setLayout(jPanel_datosLayout);
        jPanel_datosLayout.setHorizontalGroup(
            jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_datosLayout.createSequentialGroup()
                .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_datosLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_datosLayout.createSequentialGroup()
                                .addComponent(jbl_CarrierTransport, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcb_maritime)
                                    .addComponent(jcb_ground)
                                    .addComponent(jcb_aerial)))
                            .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel_datosLayout.createSequentialGroup()
                                    .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jbl_CarrierCuit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbl_CarrierName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(68, 68, 68)
                                    .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtf_CarrierName, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtf_CarrierCuit, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel_datosLayout.createSequentialGroup()
                                    .addComponent(jbl_CarrierPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(68, 68, 68)
                                    .addComponent(jtf_CarrierPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel_datosLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jbn_restoreCarrier)
                        .addGap(83, 83, 83)
                        .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbl_info, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel_datosLayout.createSequentialGroup()
                                .addComponent(jbn_saveCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(jbn_updateCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addComponent(jbn_deleteCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(629, Short.MAX_VALUE))
        );
        jPanel_datosLayout.setVerticalGroup(
            jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_datosLayout.createSequentialGroup()
                .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel_datosLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jtf_CarrierPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_datosLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtf_CarrierName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbl_CarrierName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbl_CarrierCuit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_CarrierCuit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbl_CarrierPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbl_CarrierTransport, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel_datosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcb_ground)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcb_maritime)
                .addGap(18, 18, 18)
                .addComponent(jcb_aerial)
                .addGap(7, 7, 7)
                .addComponent(jlbl_info, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbn_restoreCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbn_saveCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbn_updateCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbn_deleteCarrier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jPanel_crud.setBackground(new java.awt.Color(0, 51, 255));

        jScrollPaneTabla.setMaximumSize(new java.awt.Dimension(950, 750));
        jScrollPaneTabla.setMinimumSize(new java.awt.Dimension(950, 750));
        jScrollPaneTabla.setPreferredSize(new java.awt.Dimension(950, 750));

        tableCarriers.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jScrollPaneTabla.setViewportView(tableCarriers);

        seeCarriers.setText("VER TRANSPORTISTAS");
        seeCarriers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeCarriersActionPerformed(evt);
            }
        });

        jbl_filter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbl_filter.setForeground(new java.awt.Color(255, 255, 255));
        jbl_filter.setText("Filtrar por cuit:");

        jtf_cuitFilter.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtf_cuitFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_cuitFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_crudLayout = new javax.swing.GroupLayout(jPanel_crud);
        jPanel_crud.setLayout(jPanel_crudLayout);
        jPanel_crudLayout.setHorizontalGroup(
            jPanel_crudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_crudLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel_crudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_crudLayout.createSequentialGroup()
                        .addComponent(jbl_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_cuitFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(seeCarriers))
                    .addComponent(jScrollPaneTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(277, Short.MAX_VALUE))
        );
        jPanel_crudLayout.setVerticalGroup(
            jPanel_crudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_crudLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPaneTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel_crudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_crudLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seeCarriers, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_crudLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel_crudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbl_filter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtf_cuitFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_crud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel_datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addComponent(jPanel_crud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1366, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(452, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 714, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbn_updateCarrierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbn_updateCarrierActionPerformed
        if (controller.verifyCrud("update")) {
            changeConditionAllFields(true);
            changeConditionField(jtf_CarrierCuit, false);
            changeConditionAllButtons(false);
            changeConditionButton(jbn_updateCarrier, true);
            jlbl_info.setText("Modifique los campos que requiera. y vuelva a presionar");
        } else {
            if (verifyEmptyFields()) {
                jlbl_info.setText("Error: no pueden haber datos vacios");
            } else {
                Carrier newCarrier = controller.findByCuit(jtf_cuit.getText());
                newCarrier.setName(jtf_CarrierName.getText());
                newCarrier.setPhone(jtf_CarrierPhone.getText());
                jlbl_info.setText(controller.update(newCarrier.getId(), newCarrier));
            }
            initPanel();
        }
    }//GEN-LAST:event_jbn_updateCarrierActionPerformed

    private void jbn_deleteCarrierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbn_deleteCarrierActionPerformed
        Carrier newCarrier = controller.findByCuit(jtf_cuit.getText());
        jlbl_info.setText(controller.disable(newCarrier.getId()));
        initPanel();
    }//GEN-LAST:event_jbn_deleteCarrierActionPerformed

    private void jbn_saveCarrierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbn_saveCarrierActionPerformed
        if (controller.verifyCrud("create")) {
            changeConditionAllFields(true);
            jlbl_info.setText("Complete los campos y vuelva a presionar Guardar");
            changeConditionAllButtons(false);
            changeConditionButton(jbn_saveCarrier, true);
        } else {
            if (verifyEmptyFields()) {
                jlbl_info.setText("Error: no pueden haber datos vacios");
            } else {
                Carrier newCarrier = new Carrier();
                newCarrier.setName(jtf_CarrierName.getText());
                newCarrier.setCuit(jtf_CarrierCuit.getText());
                newCarrier.setPhone(jtf_CarrierPhone.getText());
                newCarrier.setGround(jcb_ground.isSelected());
                newCarrier.setGround(jcb_maritime.isSelected());
                newCarrier.setGround(jcb_aerial.isSelected());
                jlbl_info.setText(controller.create(newCarrier));
            }
            initPanel();
        }
    }//GEN-LAST:event_jbn_saveCarrierActionPerformed

    private void jbn_restoreCarrierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbn_restoreCarrierActionPerformed
        if (controller.verifyCrud("restore")) {
            changeConditionButton(jbn_saveCarrier, false);
            changeConditionField(jtf_cuit, true);
            jlbl_info.setText("Ingrese el CUIT a restaurar y vuelva a presionar");
        } else {
            Carrier newCarrier = controller.findByCuit(jtf_cuit.getText());
            jlbl_info.setText(controller.enable(newCarrier.getId()));
        }
        initPanel();

    }//GEN-LAST:event_jbn_restoreCarrierActionPerformed

    private void seeCarriersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeCarriersActionPerformed
        initPanel();
    }//GEN-LAST:event_seeCarriersActionPerformed

    private void jtf_cuitFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_cuitFilterActionPerformed
        carriers = controller.updateTable(jtf_cuitFilter.getText());
    }//GEN-LAST:event_jtf_cuitFilterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel_crud;
    private javax.swing.JPanel jPanel_datos;
    private javax.swing.JPanel jPanel_datos1;
    private javax.swing.JPanel jPanel_datos2;
    private javax.swing.JPanel jPanel_datos3;
    private javax.swing.JPanel jPanel_datos4;
    private javax.swing.JScrollPane jScrollPaneTabla;
    private javax.swing.JLabel jbl_CarrierCuit;
    private javax.swing.JLabel jbl_CarrierName;
    private javax.swing.JLabel jbl_CarrierPhone;
    private javax.swing.JLabel jbl_CarrierTransport;
    private javax.swing.JLabel jbl_cuit;
    private javax.swing.JLabel jbl_cuit1;
    private javax.swing.JLabel jbl_cuit2;
    private javax.swing.JLabel jbl_cuit3;
    private javax.swing.JLabel jbl_filter;
    private javax.swing.JLabel jbl_lastname;
    private javax.swing.JLabel jbl_lastname1;
    private javax.swing.JLabel jbl_lastname2;
    private javax.swing.JLabel jbl_lastname3;
    private javax.swing.JLabel jbl_name;
    private javax.swing.JLabel jbl_name1;
    private javax.swing.JLabel jbl_name2;
    private javax.swing.JLabel jbl_name3;
    private javax.swing.JButton jbn_deleteCarrier;
    private javax.swing.JButton jbn_restoreCarrier;
    private javax.swing.JButton jbn_saveCarrier;
    private javax.swing.JButton jbn_update;
    private javax.swing.JButton jbn_update1;
    private javax.swing.JButton jbn_update2;
    private javax.swing.JButton jbn_update3;
    private javax.swing.JButton jbn_updateCarrier;
    private javax.swing.JCheckBox jcb_aerial;
    private javax.swing.JCheckBox jcb_ground;
    private javax.swing.JCheckBox jcb_maritime;
    private javax.swing.JLabel jlbl_alertaApellido1;
    private javax.swing.JLabel jlbl_alertaApellido2;
    private javax.swing.JLabel jlbl_alertaApellido3;
    private javax.swing.JLabel jlbl_alertaApellido4;
    private javax.swing.JLabel jlbl_alertaDNI1;
    private javax.swing.JLabel jlbl_alertaDNI2;
    private javax.swing.JLabel jlbl_alertaDNI3;
    private javax.swing.JLabel jlbl_alertaDNI4;
    private javax.swing.JLabel jlbl_alertaNombre1;
    private javax.swing.JLabel jlbl_alertaNombre2;
    private javax.swing.JLabel jlbl_alertaNombre3;
    private javax.swing.JLabel jlbl_alertaNombre4;
    private javax.swing.JLabel jlbl_alertaTipoPersona1;
    private javax.swing.JLabel jlbl_alertaTipoPersona2;
    private javax.swing.JLabel jlbl_alertaTipoPersona3;
    private javax.swing.JLabel jlbl_alertaTipoPersona4;
    private javax.swing.JLabel jlbl_info;
    private javax.swing.JLabel jlbl_mensaje1;
    private javax.swing.JLabel jlbl_mensaje2;
    private javax.swing.JLabel jlbl_mensaje3;
    private javax.swing.JLabel jlbl_mensaje4;
    private javax.swing.JTextField jtf_CarrierCuit;
    private javax.swing.JTextField jtf_CarrierName;
    private javax.swing.JTextField jtf_CarrierPhone;
    private javax.swing.JTextField jtf_cuit;
    private javax.swing.JTextField jtf_cuit1;
    private javax.swing.JTextField jtf_cuit2;
    private javax.swing.JTextField jtf_cuit3;
    private javax.swing.JTextField jtf_cuitFilter;
    private javax.swing.JTextField jtf_lastname;
    private javax.swing.JTextField jtf_lastname1;
    private javax.swing.JTextField jtf_lastname2;
    private javax.swing.JTextField jtf_lastname3;
    private javax.swing.JTextField jtf_name;
    private javax.swing.JTextField jtf_name1;
    private javax.swing.JTextField jtf_name2;
    private javax.swing.JTextField jtf_name3;
    private javax.swing.JButton seeCarriers;
    private javax.swing.JTable tableCarriers;
    // End of variables declaration//GEN-END:variables

    @Override
    public void initListener() {
        jtf_cuitFilter.getDocument().addDocumentListener(new JTextFieldListener(carriers, controller, this));
        tableCarriers.getSelectionModel().addListSelectionListener(new TableListener(this));
    }

    @Override
    public void initValidator() {
        validator.onlyNumbers(jtf_CarrierCuit);
        validator.onlyNumbers(jtf_CarrierPhone);
        validator.onlyLetters(jtf_CarrierName);
    }

    @Override
    public void initPanel() {
        cleanAllFields();
        changeConditionAllButtons(false);
        changeConditionAllFields(false);
        changeConditionCheckBox(false);
        changeConditionButton(jbn_saveCarrier, true);
        changeConditionButton(jbn_restoreCarrier, true);
        controller.verifyCrud("");
        carriers = controller.updateTable("");
    }

    @Override
    public JTable getTable() {
        return this.tableCarriers;
    }

    @Override
    public void selectFromTable() {
        jlbl_info.setText("");
        int field = tableCarriers.getSelectedRow();
        if (field >= 0) {
            Carrier selected = carriers.get(field);
            jtf_CarrierName.setText(selected.getName());
            jtf_CarrierCuit.setText(selected.getCuit());
            jtf_CarrierPhone.setText(selected.getPhone());
            jcb_ground.setSelected(selected.getGround());
            jcb_ground.setSelected(selected.getGround());
            jcb_ground.setSelected(selected.getGround());
            changeConditionAllButtons(true);
            changeConditionButton(jbn_saveCarrier, false);
            changeConditionButton(jbn_restoreCarrier, false);
        }
        controller.verifyCrud("");
    }

    @Override
    public void changeConditionAllFields(boolean state) {
        changeConditionField(jtf_CarrierName, state);
        changeConditionField(jtf_CarrierCuit, state);
        changeConditionField(jtf_CarrierPhone, state);
    }

    @Override
    public void changeConditionField(JTextField textField, boolean state) {
        validator.enableField(state, textField);
    }

    @Override
    public void changeConditionAllButtons(boolean state) {
        changeConditionButton(jbn_saveCarrier, state);
        changeConditionButton(jbn_restoreCarrier, state);
        changeConditionButton(jbn_updateCarrier, state);
        changeConditionButton(jbn_deleteCarrier, state);
    }

    @Override
    public void changeConditionButton(JButton button, boolean state) {
        validator.enableButton(state, button, null, null, null, null);
    }

    private void changeConditionCheckBox(boolean state) {
        validator.enableCheckbox(state, jcb_ground);
        validator.enableCheckbox(state, jcb_maritime);
        validator.enableCheckbox(state, jcb_aerial);
    }

    @Override
    public void cleanAllFields() {
        cleanField(jtf_CarrierName);
        cleanField(jtf_CarrierCuit);
        cleanField(jtf_CarrierPhone);
    }

    @Override
    public void cleanField(JTextField textfield) {
        validator.cleanField(textfield);
    }

    @Override
    public boolean verifyEmptyFields() {
        List<JTextField> fields = new ArrayList<>();
        fields.add(jtf_CarrierName);
        fields.add(jtf_CarrierCuit);
        fields.add(jtf_CarrierPhone);
        for (JTextField field : fields) {
            if (field.getText().length() == 0) {
                return true;
            }
        }
        return false;
    }

    private boolean verifyEmptyTransport() {
        return (jcb_ground.isSelected() ? false
                : (jcb_maritime.isSelected() ? false
                : (!jcb_aerial.isSelected())));
    }

    @Override
    public String getStringFilter() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

}
